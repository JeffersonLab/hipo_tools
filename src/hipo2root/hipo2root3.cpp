/*
 * This code was auto generated by make_hipo2root.py
 * Do not modify this program.
 *
 *
 *
 * Author: Nick Tyler, University Of South Carolina
 */
// Standard libs
#include <cstdlib>
#include <iostream>
#include <time.h>
#include <vector>
// ROOT libs
#include "TFile.h"
#include "TROOT.h"
#include "TTree.h"
// Hipo libs
#include "clipp.h"
#include "hipo3/reader.h"

int main(int argc, char** argv) {
  ROOT::EnableThreadSafety();
  ROOT::EnableImplicitMT(2);
  std::string InFileName;
  std::string OutFileName;
  bool        is_mc      = false;
  bool        is_batch   = false;
  bool        is_test    = false;
  bool        print_help = false;
  bool        good_rec   = false;
  bool        elec_first = false;

  auto cli = (clipp::option("-h", "--help").set(print_help) % "print help",
              clipp::option("-mc", "--MC").set(is_mc) % "Convert dst and mc banks",
              clipp::option("-b", "--batch").set(is_batch) % "Don't show progress and statistics",
              clipp::option("-r", "--rec").set(good_rec) %
                  "Only save events where number of partilces in the event > 0",
              clipp::option("-e", "--elec").set(elec_first) %
                  "Only save events with good electron as first particle",
              clipp::option("-test", "--test").set(is_test) %
                  "Only convert first 50000 events for testing",
              clipp::value("inputFile.hipo", InFileName),
              clipp::opt_value("outputFile.root", OutFileName));

  clipp::parse(argc, argv, cli);
  if (print_help || InFileName.empty()) {
    std::cout << clipp::make_man_page(cli, argv[0]);
    exit(0);
  }

  if (OutFileName.empty())
    OutFileName = InFileName + ".root";

  TFile* OutputFile = new TFile(OutFileName.c_str(), "RECREATE");
  OutputFile->SetCompressionSettings(404); // kUseAnalysis
  TTree*        clas12 = new TTree("clas12", "clas12");
  hipo::reader* reader = new hipo::reader();
  reader->open(InFileName.c_str());

  hipo::node<int32_t>* REC_Event_NRUN_node             = reader->getBranch<int32_t>(330, 1);
  hipo::node<int32_t>* REC_Event_NEVENT_node           = reader->getBranch<int32_t>(330, 2);
  hipo::node<float>*   REC_Event_EVNTime_node          = reader->getBranch<float>(330, 3);
  hipo::node<int8_t>*  REC_Event_TYPE_node             = reader->getBranch<int8_t>(330, 4);
  hipo::node<int16_t>* REC_Event_EvCAT_node            = reader->getBranch<int16_t>(330, 5);
  hipo::node<int16_t>* REC_Event_NPGP_node             = reader->getBranch<int16_t>(330, 6);
  hipo::node<int64_t>* REC_Event_TRG_node              = reader->getBranch<int64_t>(330, 7);
  hipo::node<float>*   REC_Event_BCG_node              = reader->getBranch<float>(330, 8);
  hipo::node<float>*   REC_Event_LT_node               = reader->getBranch<float>(330, 9);
  hipo::node<float>*   REC_Event_STTime_node           = reader->getBranch<float>(330, 10);
  hipo::node<float>*   REC_Event_RFTime_node           = reader->getBranch<float>(330, 11);
  hipo::node<int8_t>*  REC_Event_Helic_node            = reader->getBranch<int8_t>(330, 12);
  hipo::node<float>*   REC_Event_PTIME_node            = reader->getBranch<float>(330, 13);
  hipo::node<int32_t>* REC_Particle_pid_node           = reader->getBranch<int32_t>(331, 1);
  hipo::node<float>*   REC_Particle_px_node            = reader->getBranch<float>(331, 2);
  hipo::node<float>*   REC_Particle_py_node            = reader->getBranch<float>(331, 3);
  hipo::node<float>*   REC_Particle_pz_node            = reader->getBranch<float>(331, 4);
  hipo::node<float>*   REC_Particle_vx_node            = reader->getBranch<float>(331, 5);
  hipo::node<float>*   REC_Particle_vy_node            = reader->getBranch<float>(331, 6);
  hipo::node<float>*   REC_Particle_vz_node            = reader->getBranch<float>(331, 7);
  hipo::node<int8_t>*  REC_Particle_charge_node        = reader->getBranch<int8_t>(331, 8);
  hipo::node<float>*   REC_Particle_beta_node          = reader->getBranch<float>(331, 9);
  hipo::node<float>*   REC_Particle_chi2pid_node       = reader->getBranch<float>(331, 10);
  hipo::node<int16_t>* REC_Particle_status_node        = reader->getBranch<int16_t>(331, 11);
  hipo::node<int16_t>* REC_Calorimeter_index_node      = reader->getBranch<int16_t>(332, 1);
  hipo::node<int16_t>* REC_Calorimeter_pindex_node     = reader->getBranch<int16_t>(332, 2);
  hipo::node<int8_t>*  REC_Calorimeter_detector_node   = reader->getBranch<int8_t>(332, 3);
  hipo::node<int8_t>*  REC_Calorimeter_sector_node     = reader->getBranch<int8_t>(332, 4);
  hipo::node<int8_t>*  REC_Calorimeter_layer_node      = reader->getBranch<int8_t>(332, 5);
  hipo::node<float>*   REC_Calorimeter_energy_node     = reader->getBranch<float>(332, 6);
  hipo::node<float>*   REC_Calorimeter_time_node       = reader->getBranch<float>(332, 7);
  hipo::node<float>*   REC_Calorimeter_path_node       = reader->getBranch<float>(332, 8);
  hipo::node<float>*   REC_Calorimeter_chi2_node       = reader->getBranch<float>(332, 9);
  hipo::node<float>*   REC_Calorimeter_x_node          = reader->getBranch<float>(332, 10);
  hipo::node<float>*   REC_Calorimeter_y_node          = reader->getBranch<float>(332, 11);
  hipo::node<float>*   REC_Calorimeter_z_node          = reader->getBranch<float>(332, 12);
  hipo::node<float>*   REC_Calorimeter_hx_node         = reader->getBranch<float>(332, 13);
  hipo::node<float>*   REC_Calorimeter_hy_node         = reader->getBranch<float>(332, 14);
  hipo::node<float>*   REC_Calorimeter_hz_node         = reader->getBranch<float>(332, 15);
  hipo::node<float>*   REC_Calorimeter_lu_node         = reader->getBranch<float>(332, 16);
  hipo::node<float>*   REC_Calorimeter_lv_node         = reader->getBranch<float>(332, 17);
  hipo::node<float>*   REC_Calorimeter_lw_node         = reader->getBranch<float>(332, 18);
  hipo::node<float>*   REC_Calorimeter_du_node         = reader->getBranch<float>(332, 19);
  hipo::node<float>*   REC_Calorimeter_dv_node         = reader->getBranch<float>(332, 20);
  hipo::node<float>*   REC_Calorimeter_dw_node         = reader->getBranch<float>(332, 21);
  hipo::node<float>*   REC_Calorimeter_m2u_node        = reader->getBranch<float>(332, 22);
  hipo::node<float>*   REC_Calorimeter_m2v_node        = reader->getBranch<float>(332, 23);
  hipo::node<float>*   REC_Calorimeter_m2w_node        = reader->getBranch<float>(332, 24);
  hipo::node<float>*   REC_Calorimeter_m3u_node        = reader->getBranch<float>(332, 25);
  hipo::node<float>*   REC_Calorimeter_m3v_node        = reader->getBranch<float>(332, 26);
  hipo::node<float>*   REC_Calorimeter_m3w_node        = reader->getBranch<float>(332, 27);
  hipo::node<int16_t>* REC_Calorimeter_status_node     = reader->getBranch<int16_t>(332, 28);
  hipo::node<int16_t>* REC_Cherenkov_index_node        = reader->getBranch<int16_t>(333, 1);
  hipo::node<int16_t>* REC_Cherenkov_pindex_node       = reader->getBranch<int16_t>(333, 2);
  hipo::node<int8_t>*  REC_Cherenkov_detector_node     = reader->getBranch<int8_t>(333, 3);
  hipo::node<int8_t>*  REC_Cherenkov_sector_node       = reader->getBranch<int8_t>(333, 4);
  hipo::node<float>*   REC_Cherenkov_nphe_node         = reader->getBranch<float>(333, 5);
  hipo::node<float>*   REC_Cherenkov_time_node         = reader->getBranch<float>(333, 6);
  hipo::node<float>*   REC_Cherenkov_path_node         = reader->getBranch<float>(333, 7);
  hipo::node<float>*   REC_Cherenkov_chi2_node         = reader->getBranch<float>(333, 8);
  hipo::node<float>*   REC_Cherenkov_x_node            = reader->getBranch<float>(333, 9);
  hipo::node<float>*   REC_Cherenkov_y_node            = reader->getBranch<float>(333, 10);
  hipo::node<float>*   REC_Cherenkov_z_node            = reader->getBranch<float>(333, 11);
  hipo::node<float>*   REC_Cherenkov_theta_node        = reader->getBranch<float>(333, 12);
  hipo::node<float>*   REC_Cherenkov_phi_node          = reader->getBranch<float>(333, 13);
  hipo::node<float>*   REC_Cherenkov_dtheta_node       = reader->getBranch<float>(333, 14);
  hipo::node<float>*   REC_Cherenkov_dphi_node         = reader->getBranch<float>(333, 15);
  hipo::node<int16_t>* REC_Cherenkov_status_node       = reader->getBranch<int16_t>(333, 16);
  hipo::node<int16_t>* REC_ForwardTagger_index_node    = reader->getBranch<int16_t>(334, 1);
  hipo::node<int16_t>* REC_ForwardTagger_pindex_node   = reader->getBranch<int16_t>(334, 2);
  hipo::node<int8_t>*  REC_ForwardTagger_detector_node = reader->getBranch<int8_t>(334, 3);
  hipo::node<float>*   REC_ForwardTagger_energy_node   = reader->getBranch<float>(334, 4);
  hipo::node<float>*   REC_ForwardTagger_time_node     = reader->getBranch<float>(334, 5);
  hipo::node<float>*   REC_ForwardTagger_path_node     = reader->getBranch<float>(334, 6);
  hipo::node<float>*   REC_ForwardTagger_chi2_node     = reader->getBranch<float>(334, 7);
  hipo::node<float>*   REC_ForwardTagger_x_node        = reader->getBranch<float>(334, 8);
  hipo::node<float>*   REC_ForwardTagger_y_node        = reader->getBranch<float>(334, 9);
  hipo::node<float>*   REC_ForwardTagger_z_node        = reader->getBranch<float>(334, 10);
  hipo::node<float>*   REC_ForwardTagger_dx_node       = reader->getBranch<float>(334, 11);
  hipo::node<float>*   REC_ForwardTagger_dy_node       = reader->getBranch<float>(334, 12);
  hipo::node<float>*   REC_ForwardTagger_radius_node   = reader->getBranch<float>(334, 13);
  hipo::node<int16_t>* REC_ForwardTagger_size_node     = reader->getBranch<int16_t>(334, 14);
  hipo::node<int16_t>* REC_ForwardTagger_status_node   = reader->getBranch<int16_t>(334, 15);
  hipo::node<int16_t>* REC_Scintillator_index_node     = reader->getBranch<int16_t>(335, 1);
  hipo::node<int16_t>* REC_Scintillator_pindex_node    = reader->getBranch<int16_t>(335, 2);
  hipo::node<int8_t>*  REC_Scintillator_detector_node  = reader->getBranch<int8_t>(335, 3);
  hipo::node<int8_t>*  REC_Scintillator_sector_node    = reader->getBranch<int8_t>(335, 4);
  hipo::node<int8_t>*  REC_Scintillator_layer_node     = reader->getBranch<int8_t>(335, 5);
  hipo::node<int16_t>* REC_Scintillator_component_node = reader->getBranch<int16_t>(335, 6);
  hipo::node<float>*   REC_Scintillator_energy_node    = reader->getBranch<float>(335, 7);
  hipo::node<float>*   REC_Scintillator_time_node      = reader->getBranch<float>(335, 8);
  hipo::node<float>*   REC_Scintillator_path_node      = reader->getBranch<float>(335, 9);
  hipo::node<float>*   REC_Scintillator_chi2_node      = reader->getBranch<float>(335, 10);
  hipo::node<float>*   REC_Scintillator_x_node         = reader->getBranch<float>(335, 11);
  hipo::node<float>*   REC_Scintillator_y_node         = reader->getBranch<float>(335, 12);
  hipo::node<float>*   REC_Scintillator_z_node         = reader->getBranch<float>(335, 13);
  hipo::node<float>*   REC_Scintillator_hx_node        = reader->getBranch<float>(335, 14);
  hipo::node<float>*   REC_Scintillator_hy_node        = reader->getBranch<float>(335, 15);
  hipo::node<float>*   REC_Scintillator_hz_node        = reader->getBranch<float>(335, 16);
  hipo::node<int16_t>* REC_Scintillator_status_node    = reader->getBranch<int16_t>(335, 17);
  hipo::node<int16_t>* REC_Track_index_node            = reader->getBranch<int16_t>(336, 1);
  hipo::node<int16_t>* REC_Track_pindex_node           = reader->getBranch<int16_t>(336, 2);
  hipo::node<int8_t>*  REC_Track_detector_node         = reader->getBranch<int8_t>(336, 3);
  hipo::node<int8_t>*  REC_Track_sector_node           = reader->getBranch<int8_t>(336, 4);
  hipo::node<int16_t>* REC_Track_status_node           = reader->getBranch<int16_t>(336, 5);
  hipo::node<int8_t>*  REC_Track_q_node                = reader->getBranch<int8_t>(336, 6);
  hipo::node<float>*   REC_Track_chi2_node             = reader->getBranch<float>(336, 7);
  hipo::node<int16_t>* REC_Track_NDF_node              = reader->getBranch<int16_t>(336, 8);
  hipo::node<float>*   REC_Track_px_nomm_node          = reader->getBranch<float>(336, 9);
  hipo::node<float>*   REC_Track_py_nomm_node          = reader->getBranch<float>(336, 10);
  hipo::node<float>*   REC_Track_pz_nomm_node          = reader->getBranch<float>(336, 11);
  hipo::node<float>*   REC_Track_vx_nomm_node          = reader->getBranch<float>(336, 12);
  hipo::node<float>*   REC_Track_vy_nomm_node          = reader->getBranch<float>(336, 13);
  hipo::node<float>*   REC_Track_vz_nomm_node          = reader->getBranch<float>(336, 14);
  hipo::node<float>*   REC_Track_chi2_nomm_node        = reader->getBranch<float>(336, 15);
  hipo::node<int16_t>* REC_Track_NDF_nomm_node         = reader->getBranch<int16_t>(336, 16);
  hipo::node<int16_t>* REC_TrackCross_index_node       = reader->getBranch<int16_t>(337, 1);
  hipo::node<int16_t>* REC_TrackCross_pindex_node      = reader->getBranch<int16_t>(337, 2);
  hipo::node<int8_t>*  REC_TrackCross_detector_node    = reader->getBranch<int8_t>(337, 3);
  hipo::node<int8_t>*  REC_TrackCross_sector_node      = reader->getBranch<int8_t>(337, 4);
  hipo::node<int8_t>*  REC_TrackCross_layer_node       = reader->getBranch<int8_t>(337, 5);
  hipo::node<float>*   REC_TrackCross_c_x_node         = reader->getBranch<float>(337, 6);
  hipo::node<float>*   REC_TrackCross_c_y_node         = reader->getBranch<float>(337, 7);
  hipo::node<float>*   REC_TrackCross_c_z_node         = reader->getBranch<float>(337, 8);
  hipo::node<float>*   REC_TrackCross_c_ux_node        = reader->getBranch<float>(337, 9);
  hipo::node<float>*   REC_TrackCross_c_uy_node        = reader->getBranch<float>(337, 10);
  hipo::node<float>*   REC_TrackCross_c_uz_node        = reader->getBranch<float>(337, 11);
  hipo::node<int16_t>* REC_TrackCross_status_node      = reader->getBranch<int16_t>(337, 12);
  hipo::node<int16_t>* REC_CovMat_index_node           = reader->getBranch<int16_t>(338, 1);
  hipo::node<int16_t>* REC_CovMat_pindex_node          = reader->getBranch<int16_t>(338, 2);
  hipo::node<float>*   REC_CovMat_C11_node             = reader->getBranch<float>(338, 3);
  hipo::node<float>*   REC_CovMat_C12_node             = reader->getBranch<float>(338, 4);
  hipo::node<float>*   REC_CovMat_C13_node             = reader->getBranch<float>(338, 5);
  hipo::node<float>*   REC_CovMat_C14_node             = reader->getBranch<float>(338, 6);
  hipo::node<float>*   REC_CovMat_C15_node             = reader->getBranch<float>(338, 7);
  hipo::node<float>*   REC_CovMat_C22_node             = reader->getBranch<float>(338, 8);
  hipo::node<float>*   REC_CovMat_C23_node             = reader->getBranch<float>(338, 9);
  hipo::node<float>*   REC_CovMat_C24_node             = reader->getBranch<float>(338, 10);
  hipo::node<float>*   REC_CovMat_C25_node             = reader->getBranch<float>(338, 11);
  hipo::node<float>*   REC_CovMat_C33_node             = reader->getBranch<float>(338, 12);
  hipo::node<float>*   REC_CovMat_C34_node             = reader->getBranch<float>(338, 13);
  hipo::node<float>*   REC_CovMat_C35_node             = reader->getBranch<float>(338, 14);
  hipo::node<float>*   REC_CovMat_C44_node             = reader->getBranch<float>(338, 15);
  hipo::node<float>*   REC_CovMat_C45_node             = reader->getBranch<float>(338, 16);
  hipo::node<float>*   REC_CovMat_C55_node             = reader->getBranch<float>(338, 17);
  hipo::node<int16_t>* REC_VertDoca_index1_node        = reader->getBranch<int16_t>(339, 1);
  hipo::node<int16_t>* REC_VertDoca_index2_node        = reader->getBranch<int16_t>(339, 2);
  hipo::node<float>*   REC_VertDoca_x_node             = reader->getBranch<float>(339, 3);
  hipo::node<float>*   REC_VertDoca_y_node             = reader->getBranch<float>(339, 4);
  hipo::node<float>*   REC_VertDoca_z_node             = reader->getBranch<float>(339, 5);
  hipo::node<float>*   REC_VertDoca_x1_node            = reader->getBranch<float>(339, 6);
  hipo::node<float>*   REC_VertDoca_y1_node            = reader->getBranch<float>(339, 7);
  hipo::node<float>*   REC_VertDoca_z1_node            = reader->getBranch<float>(339, 8);
  hipo::node<float>*   REC_VertDoca_cx1_node           = reader->getBranch<float>(339, 9);
  hipo::node<float>*   REC_VertDoca_cy1_node           = reader->getBranch<float>(339, 10);
  hipo::node<float>*   REC_VertDoca_cz1_node           = reader->getBranch<float>(339, 11);
  hipo::node<float>*   REC_VertDoca_x2_node            = reader->getBranch<float>(339, 12);
  hipo::node<float>*   REC_VertDoca_y2_node            = reader->getBranch<float>(339, 13);
  hipo::node<float>*   REC_VertDoca_z2_node            = reader->getBranch<float>(339, 14);
  hipo::node<float>*   REC_VertDoca_cx2_node           = reader->getBranch<float>(339, 15);
  hipo::node<float>*   REC_VertDoca_cy2_node           = reader->getBranch<float>(339, 16);
  hipo::node<float>*   REC_VertDoca_cz2_node           = reader->getBranch<float>(339, 17);
  hipo::node<float>*   REC_VertDoca_r_node             = reader->getBranch<float>(339, 18);
  hipo::node<int16_t>* REC_Traj_pindex_node            = reader->getBranch<int16_t>(340, 1);
  hipo::node<int16_t>* REC_Traj_index_node             = reader->getBranch<int16_t>(340, 2);
  hipo::node<int16_t>* REC_Traj_detId_node             = reader->getBranch<int16_t>(340, 3);
  hipo::node<int8_t>*  REC_Traj_q_node                 = reader->getBranch<int8_t>(340, 4);
  hipo::node<float>*   REC_Traj_x_node                 = reader->getBranch<float>(340, 5);
  hipo::node<float>*   REC_Traj_y_node                 = reader->getBranch<float>(340, 6);
  hipo::node<float>*   REC_Traj_z_node                 = reader->getBranch<float>(340, 7);
  hipo::node<float>*   REC_Traj_cx_node                = reader->getBranch<float>(340, 8);
  hipo::node<float>*   REC_Traj_cy_node                = reader->getBranch<float>(340, 9);
  hipo::node<float>*   REC_Traj_cz_node                = reader->getBranch<float>(340, 10);
  hipo::node<float>*   REC_Traj_pathlength_node        = reader->getBranch<float>(340, 11);

  std::vector<int>   REC_Event_NRUN_vec;
  std::vector<int>   REC_Event_NEVENT_vec;
  std::vector<float> REC_Event_EVNTime_vec;
  std::vector<int>   REC_Event_TYPE_vec;
  std::vector<int>   REC_Event_EvCAT_vec;
  std::vector<int>   REC_Event_NPGP_vec;
  std::vector<int>   REC_Event_TRG_vec;
  std::vector<float> REC_Event_BCG_vec;
  std::vector<float> REC_Event_LT_vec;
  std::vector<float> REC_Event_STTime_vec;
  std::vector<float> REC_Event_RFTime_vec;
  std::vector<int>   REC_Event_Helic_vec;
  std::vector<float> REC_Event_PTIME_vec;
  std::vector<int>   REC_Particle_pid_vec;
  std::vector<float> REC_Particle_px_vec;
  std::vector<float> REC_Particle_py_vec;
  std::vector<float> REC_Particle_pz_vec;
  std::vector<float> REC_Particle_vx_vec;
  std::vector<float> REC_Particle_vy_vec;
  std::vector<float> REC_Particle_vz_vec;
  std::vector<int>   REC_Particle_charge_vec;
  std::vector<float> REC_Particle_beta_vec;
  std::vector<float> REC_Particle_chi2pid_vec;
  std::vector<int>   REC_Particle_status_vec;
  std::vector<int>   REC_Calorimeter_index_vec;
  std::vector<int>   REC_Calorimeter_pindex_vec;
  std::vector<int>   REC_Calorimeter_detector_vec;
  std::vector<int>   REC_Calorimeter_sector_vec;
  std::vector<int>   REC_Calorimeter_layer_vec;
  std::vector<float> REC_Calorimeter_energy_vec;
  std::vector<float> REC_Calorimeter_time_vec;
  std::vector<float> REC_Calorimeter_path_vec;
  std::vector<float> REC_Calorimeter_chi2_vec;
  std::vector<float> REC_Calorimeter_x_vec;
  std::vector<float> REC_Calorimeter_y_vec;
  std::vector<float> REC_Calorimeter_z_vec;
  std::vector<float> REC_Calorimeter_hx_vec;
  std::vector<float> REC_Calorimeter_hy_vec;
  std::vector<float> REC_Calorimeter_hz_vec;
  std::vector<float> REC_Calorimeter_lu_vec;
  std::vector<float> REC_Calorimeter_lv_vec;
  std::vector<float> REC_Calorimeter_lw_vec;
  std::vector<float> REC_Calorimeter_du_vec;
  std::vector<float> REC_Calorimeter_dv_vec;
  std::vector<float> REC_Calorimeter_dw_vec;
  std::vector<float> REC_Calorimeter_m2u_vec;
  std::vector<float> REC_Calorimeter_m2v_vec;
  std::vector<float> REC_Calorimeter_m2w_vec;
  std::vector<float> REC_Calorimeter_m3u_vec;
  std::vector<float> REC_Calorimeter_m3v_vec;
  std::vector<float> REC_Calorimeter_m3w_vec;
  std::vector<int>   REC_Calorimeter_status_vec;
  std::vector<int>   REC_Cherenkov_index_vec;
  std::vector<int>   REC_Cherenkov_pindex_vec;
  std::vector<int>   REC_Cherenkov_detector_vec;
  std::vector<int>   REC_Cherenkov_sector_vec;
  std::vector<float> REC_Cherenkov_nphe_vec;
  std::vector<float> REC_Cherenkov_time_vec;
  std::vector<float> REC_Cherenkov_path_vec;
  std::vector<float> REC_Cherenkov_chi2_vec;
  std::vector<float> REC_Cherenkov_x_vec;
  std::vector<float> REC_Cherenkov_y_vec;
  std::vector<float> REC_Cherenkov_z_vec;
  std::vector<float> REC_Cherenkov_theta_vec;
  std::vector<float> REC_Cherenkov_phi_vec;
  std::vector<float> REC_Cherenkov_dtheta_vec;
  std::vector<float> REC_Cherenkov_dphi_vec;
  std::vector<int>   REC_Cherenkov_status_vec;
  std::vector<int>   REC_ForwardTagger_index_vec;
  std::vector<int>   REC_ForwardTagger_pindex_vec;
  std::vector<int>   REC_ForwardTagger_detector_vec;
  std::vector<float> REC_ForwardTagger_energy_vec;
  std::vector<float> REC_ForwardTagger_time_vec;
  std::vector<float> REC_ForwardTagger_path_vec;
  std::vector<float> REC_ForwardTagger_chi2_vec;
  std::vector<float> REC_ForwardTagger_x_vec;
  std::vector<float> REC_ForwardTagger_y_vec;
  std::vector<float> REC_ForwardTagger_z_vec;
  std::vector<float> REC_ForwardTagger_dx_vec;
  std::vector<float> REC_ForwardTagger_dy_vec;
  std::vector<float> REC_ForwardTagger_radius_vec;
  std::vector<int>   REC_ForwardTagger_size_vec;
  std::vector<int>   REC_ForwardTagger_status_vec;
  std::vector<int>   REC_Scintillator_index_vec;
  std::vector<int>   REC_Scintillator_pindex_vec;
  std::vector<int>   REC_Scintillator_detector_vec;
  std::vector<int>   REC_Scintillator_sector_vec;
  std::vector<int>   REC_Scintillator_layer_vec;
  std::vector<int>   REC_Scintillator_component_vec;
  std::vector<float> REC_Scintillator_energy_vec;
  std::vector<float> REC_Scintillator_time_vec;
  std::vector<float> REC_Scintillator_path_vec;
  std::vector<float> REC_Scintillator_chi2_vec;
  std::vector<float> REC_Scintillator_x_vec;
  std::vector<float> REC_Scintillator_y_vec;
  std::vector<float> REC_Scintillator_z_vec;
  std::vector<float> REC_Scintillator_hx_vec;
  std::vector<float> REC_Scintillator_hy_vec;
  std::vector<float> REC_Scintillator_hz_vec;
  std::vector<int>   REC_Scintillator_status_vec;
  std::vector<int>   REC_Track_index_vec;
  std::vector<int>   REC_Track_pindex_vec;
  std::vector<int>   REC_Track_detector_vec;
  std::vector<int>   REC_Track_sector_vec;
  std::vector<int>   REC_Track_status_vec;
  std::vector<int>   REC_Track_q_vec;
  std::vector<float> REC_Track_chi2_vec;
  std::vector<int>   REC_Track_NDF_vec;
  std::vector<float> REC_Track_px_nomm_vec;
  std::vector<float> REC_Track_py_nomm_vec;
  std::vector<float> REC_Track_pz_nomm_vec;
  std::vector<float> REC_Track_vx_nomm_vec;
  std::vector<float> REC_Track_vy_nomm_vec;
  std::vector<float> REC_Track_vz_nomm_vec;
  std::vector<float> REC_Track_chi2_nomm_vec;
  std::vector<int>   REC_Track_NDF_nomm_vec;
  std::vector<int>   REC_TrackCross_index_vec;
  std::vector<int>   REC_TrackCross_pindex_vec;
  std::vector<int>   REC_TrackCross_detector_vec;
  std::vector<int>   REC_TrackCross_sector_vec;
  std::vector<int>   REC_TrackCross_layer_vec;
  std::vector<float> REC_TrackCross_c_x_vec;
  std::vector<float> REC_TrackCross_c_y_vec;
  std::vector<float> REC_TrackCross_c_z_vec;
  std::vector<float> REC_TrackCross_c_ux_vec;
  std::vector<float> REC_TrackCross_c_uy_vec;
  std::vector<float> REC_TrackCross_c_uz_vec;
  std::vector<int>   REC_TrackCross_status_vec;
  std::vector<int>   REC_CovMat_index_vec;
  std::vector<int>   REC_CovMat_pindex_vec;
  std::vector<float> REC_CovMat_C11_vec;
  std::vector<float> REC_CovMat_C12_vec;
  std::vector<float> REC_CovMat_C13_vec;
  std::vector<float> REC_CovMat_C14_vec;
  std::vector<float> REC_CovMat_C15_vec;
  std::vector<float> REC_CovMat_C22_vec;
  std::vector<float> REC_CovMat_C23_vec;
  std::vector<float> REC_CovMat_C24_vec;
  std::vector<float> REC_CovMat_C25_vec;
  std::vector<float> REC_CovMat_C33_vec;
  std::vector<float> REC_CovMat_C34_vec;
  std::vector<float> REC_CovMat_C35_vec;
  std::vector<float> REC_CovMat_C44_vec;
  std::vector<float> REC_CovMat_C45_vec;
  std::vector<float> REC_CovMat_C55_vec;
  std::vector<int>   REC_VertDoca_index1_vec;
  std::vector<int>   REC_VertDoca_index2_vec;
  std::vector<float> REC_VertDoca_x_vec;
  std::vector<float> REC_VertDoca_y_vec;
  std::vector<float> REC_VertDoca_z_vec;
  std::vector<float> REC_VertDoca_x1_vec;
  std::vector<float> REC_VertDoca_y1_vec;
  std::vector<float> REC_VertDoca_z1_vec;
  std::vector<float> REC_VertDoca_cx1_vec;
  std::vector<float> REC_VertDoca_cy1_vec;
  std::vector<float> REC_VertDoca_cz1_vec;
  std::vector<float> REC_VertDoca_x2_vec;
  std::vector<float> REC_VertDoca_y2_vec;
  std::vector<float> REC_VertDoca_z2_vec;
  std::vector<float> REC_VertDoca_cx2_vec;
  std::vector<float> REC_VertDoca_cy2_vec;
  std::vector<float> REC_VertDoca_cz2_vec;
  std::vector<float> REC_VertDoca_r_vec;
  std::vector<int>   REC_Traj_pindex_vec;
  std::vector<int>   REC_Traj_index_vec;
  std::vector<int>   REC_Traj_detId_vec;
  std::vector<int>   REC_Traj_q_vec;
  std::vector<float> REC_Traj_x_vec;
  std::vector<float> REC_Traj_y_vec;
  std::vector<float> REC_Traj_z_vec;
  std::vector<float> REC_Traj_cx_vec;
  std::vector<float> REC_Traj_cy_vec;
  std::vector<float> REC_Traj_cz_vec;
  std::vector<float> REC_Traj_pathlength_vec;

  clas12->Branch("REC_Event_NRUN", &REC_Event_NRUN_vec);
  clas12->Branch("REC_Event_NEVENT", &REC_Event_NEVENT_vec);
  clas12->Branch("REC_Event_EVNTime", &REC_Event_EVNTime_vec);
  clas12->Branch("REC_Event_TYPE", &REC_Event_TYPE_vec);
  clas12->Branch("REC_Event_EvCAT", &REC_Event_EvCAT_vec);
  clas12->Branch("REC_Event_NPGP", &REC_Event_NPGP_vec);
  clas12->Branch("REC_Event_TRG", &REC_Event_TRG_vec);
  clas12->Branch("REC_Event_BCG", &REC_Event_BCG_vec);
  clas12->Branch("REC_Event_LT", &REC_Event_LT_vec);
  clas12->Branch("REC_Event_STTime", &REC_Event_STTime_vec);
  clas12->Branch("REC_Event_RFTime", &REC_Event_RFTime_vec);
  clas12->Branch("REC_Event_Helic", &REC_Event_Helic_vec);
  clas12->Branch("REC_Event_PTIME", &REC_Event_PTIME_vec);
  clas12->Branch("REC_Particle_pid", &REC_Particle_pid_vec);
  clas12->Branch("REC_Particle_px", &REC_Particle_px_vec);
  clas12->Branch("REC_Particle_py", &REC_Particle_py_vec);
  clas12->Branch("REC_Particle_pz", &REC_Particle_pz_vec);
  clas12->Branch("REC_Particle_vx", &REC_Particle_vx_vec);
  clas12->Branch("REC_Particle_vy", &REC_Particle_vy_vec);
  clas12->Branch("REC_Particle_vz", &REC_Particle_vz_vec);
  clas12->Branch("REC_Particle_charge", &REC_Particle_charge_vec);
  clas12->Branch("REC_Particle_beta", &REC_Particle_beta_vec);
  clas12->Branch("REC_Particle_chi2pid", &REC_Particle_chi2pid_vec);
  clas12->Branch("REC_Particle_status", &REC_Particle_status_vec);
  clas12->Branch("REC_Calorimeter_index", &REC_Calorimeter_index_vec);
  clas12->Branch("REC_Calorimeter_pindex", &REC_Calorimeter_pindex_vec);
  clas12->Branch("REC_Calorimeter_detector", &REC_Calorimeter_detector_vec);
  clas12->Branch("REC_Calorimeter_sector", &REC_Calorimeter_sector_vec);
  clas12->Branch("REC_Calorimeter_layer", &REC_Calorimeter_layer_vec);
  clas12->Branch("REC_Calorimeter_energy", &REC_Calorimeter_energy_vec);
  clas12->Branch("REC_Calorimeter_time", &REC_Calorimeter_time_vec);
  clas12->Branch("REC_Calorimeter_path", &REC_Calorimeter_path_vec);
  clas12->Branch("REC_Calorimeter_chi2", &REC_Calorimeter_chi2_vec);
  clas12->Branch("REC_Calorimeter_x", &REC_Calorimeter_x_vec);
  clas12->Branch("REC_Calorimeter_y", &REC_Calorimeter_y_vec);
  clas12->Branch("REC_Calorimeter_z", &REC_Calorimeter_z_vec);
  clas12->Branch("REC_Calorimeter_hx", &REC_Calorimeter_hx_vec);
  clas12->Branch("REC_Calorimeter_hy", &REC_Calorimeter_hy_vec);
  clas12->Branch("REC_Calorimeter_hz", &REC_Calorimeter_hz_vec);
  clas12->Branch("REC_Calorimeter_lu", &REC_Calorimeter_lu_vec);
  clas12->Branch("REC_Calorimeter_lv", &REC_Calorimeter_lv_vec);
  clas12->Branch("REC_Calorimeter_lw", &REC_Calorimeter_lw_vec);
  clas12->Branch("REC_Calorimeter_du", &REC_Calorimeter_du_vec);
  clas12->Branch("REC_Calorimeter_dv", &REC_Calorimeter_dv_vec);
  clas12->Branch("REC_Calorimeter_dw", &REC_Calorimeter_dw_vec);
  clas12->Branch("REC_Calorimeter_m2u", &REC_Calorimeter_m2u_vec);
  clas12->Branch("REC_Calorimeter_m2v", &REC_Calorimeter_m2v_vec);
  clas12->Branch("REC_Calorimeter_m2w", &REC_Calorimeter_m2w_vec);
  clas12->Branch("REC_Calorimeter_m3u", &REC_Calorimeter_m3u_vec);
  clas12->Branch("REC_Calorimeter_m3v", &REC_Calorimeter_m3v_vec);
  clas12->Branch("REC_Calorimeter_m3w", &REC_Calorimeter_m3w_vec);
  clas12->Branch("REC_Calorimeter_status", &REC_Calorimeter_status_vec);
  clas12->Branch("REC_Cherenkov_index", &REC_Cherenkov_index_vec);
  clas12->Branch("REC_Cherenkov_pindex", &REC_Cherenkov_pindex_vec);
  clas12->Branch("REC_Cherenkov_detector", &REC_Cherenkov_detector_vec);
  clas12->Branch("REC_Cherenkov_sector", &REC_Cherenkov_sector_vec);
  clas12->Branch("REC_Cherenkov_nphe", &REC_Cherenkov_nphe_vec);
  clas12->Branch("REC_Cherenkov_time", &REC_Cherenkov_time_vec);
  clas12->Branch("REC_Cherenkov_path", &REC_Cherenkov_path_vec);
  clas12->Branch("REC_Cherenkov_chi2", &REC_Cherenkov_chi2_vec);
  clas12->Branch("REC_Cherenkov_x", &REC_Cherenkov_x_vec);
  clas12->Branch("REC_Cherenkov_y", &REC_Cherenkov_y_vec);
  clas12->Branch("REC_Cherenkov_z", &REC_Cherenkov_z_vec);
  clas12->Branch("REC_Cherenkov_theta", &REC_Cherenkov_theta_vec);
  clas12->Branch("REC_Cherenkov_phi", &REC_Cherenkov_phi_vec);
  clas12->Branch("REC_Cherenkov_dtheta", &REC_Cherenkov_dtheta_vec);
  clas12->Branch("REC_Cherenkov_dphi", &REC_Cherenkov_dphi_vec);
  clas12->Branch("REC_Cherenkov_status", &REC_Cherenkov_status_vec);
  clas12->Branch("REC_ForwardTagger_index", &REC_ForwardTagger_index_vec);
  clas12->Branch("REC_ForwardTagger_pindex", &REC_ForwardTagger_pindex_vec);
  clas12->Branch("REC_ForwardTagger_detector", &REC_ForwardTagger_detector_vec);
  clas12->Branch("REC_ForwardTagger_energy", &REC_ForwardTagger_energy_vec);
  clas12->Branch("REC_ForwardTagger_time", &REC_ForwardTagger_time_vec);
  clas12->Branch("REC_ForwardTagger_path", &REC_ForwardTagger_path_vec);
  clas12->Branch("REC_ForwardTagger_chi2", &REC_ForwardTagger_chi2_vec);
  clas12->Branch("REC_ForwardTagger_x", &REC_ForwardTagger_x_vec);
  clas12->Branch("REC_ForwardTagger_y", &REC_ForwardTagger_y_vec);
  clas12->Branch("REC_ForwardTagger_z", &REC_ForwardTagger_z_vec);
  clas12->Branch("REC_ForwardTagger_dx", &REC_ForwardTagger_dx_vec);
  clas12->Branch("REC_ForwardTagger_dy", &REC_ForwardTagger_dy_vec);
  clas12->Branch("REC_ForwardTagger_radius", &REC_ForwardTagger_radius_vec);
  clas12->Branch("REC_ForwardTagger_size", &REC_ForwardTagger_size_vec);
  clas12->Branch("REC_ForwardTagger_status", &REC_ForwardTagger_status_vec);
  clas12->Branch("REC_Scintillator_index", &REC_Scintillator_index_vec);
  clas12->Branch("REC_Scintillator_pindex", &REC_Scintillator_pindex_vec);
  clas12->Branch("REC_Scintillator_detector", &REC_Scintillator_detector_vec);
  clas12->Branch("REC_Scintillator_sector", &REC_Scintillator_sector_vec);
  clas12->Branch("REC_Scintillator_layer", &REC_Scintillator_layer_vec);
  clas12->Branch("REC_Scintillator_component", &REC_Scintillator_component_vec);
  clas12->Branch("REC_Scintillator_energy", &REC_Scintillator_energy_vec);
  clas12->Branch("REC_Scintillator_time", &REC_Scintillator_time_vec);
  clas12->Branch("REC_Scintillator_path", &REC_Scintillator_path_vec);
  clas12->Branch("REC_Scintillator_chi2", &REC_Scintillator_chi2_vec);
  clas12->Branch("REC_Scintillator_x", &REC_Scintillator_x_vec);
  clas12->Branch("REC_Scintillator_y", &REC_Scintillator_y_vec);
  clas12->Branch("REC_Scintillator_z", &REC_Scintillator_z_vec);
  clas12->Branch("REC_Scintillator_hx", &REC_Scintillator_hx_vec);
  clas12->Branch("REC_Scintillator_hy", &REC_Scintillator_hy_vec);
  clas12->Branch("REC_Scintillator_hz", &REC_Scintillator_hz_vec);
  clas12->Branch("REC_Scintillator_status", &REC_Scintillator_status_vec);
  clas12->Branch("REC_Track_index", &REC_Track_index_vec);
  clas12->Branch("REC_Track_pindex", &REC_Track_pindex_vec);
  clas12->Branch("REC_Track_detector", &REC_Track_detector_vec);
  clas12->Branch("REC_Track_sector", &REC_Track_sector_vec);
  clas12->Branch("REC_Track_status", &REC_Track_status_vec);
  clas12->Branch("REC_Track_q", &REC_Track_q_vec);
  clas12->Branch("REC_Track_chi2", &REC_Track_chi2_vec);
  clas12->Branch("REC_Track_NDF", &REC_Track_NDF_vec);
  clas12->Branch("REC_Track_px_nomm", &REC_Track_px_nomm_vec);
  clas12->Branch("REC_Track_py_nomm", &REC_Track_py_nomm_vec);
  clas12->Branch("REC_Track_pz_nomm", &REC_Track_pz_nomm_vec);
  clas12->Branch("REC_Track_vx_nomm", &REC_Track_vx_nomm_vec);
  clas12->Branch("REC_Track_vy_nomm", &REC_Track_vy_nomm_vec);
  clas12->Branch("REC_Track_vz_nomm", &REC_Track_vz_nomm_vec);
  clas12->Branch("REC_Track_chi2_nomm", &REC_Track_chi2_nomm_vec);
  clas12->Branch("REC_Track_NDF_nomm", &REC_Track_NDF_nomm_vec);
  clas12->Branch("REC_TrackCross_index", &REC_TrackCross_index_vec);
  clas12->Branch("REC_TrackCross_pindex", &REC_TrackCross_pindex_vec);
  clas12->Branch("REC_TrackCross_detector", &REC_TrackCross_detector_vec);
  clas12->Branch("REC_TrackCross_sector", &REC_TrackCross_sector_vec);
  clas12->Branch("REC_TrackCross_layer", &REC_TrackCross_layer_vec);
  clas12->Branch("REC_TrackCross_c_x", &REC_TrackCross_c_x_vec);
  clas12->Branch("REC_TrackCross_c_y", &REC_TrackCross_c_y_vec);
  clas12->Branch("REC_TrackCross_c_z", &REC_TrackCross_c_z_vec);
  clas12->Branch("REC_TrackCross_c_ux", &REC_TrackCross_c_ux_vec);
  clas12->Branch("REC_TrackCross_c_uy", &REC_TrackCross_c_uy_vec);
  clas12->Branch("REC_TrackCross_c_uz", &REC_TrackCross_c_uz_vec);
  clas12->Branch("REC_TrackCross_status", &REC_TrackCross_status_vec);
  clas12->Branch("REC_CovMat_index", &REC_CovMat_index_vec);
  clas12->Branch("REC_CovMat_pindex", &REC_CovMat_pindex_vec);
  clas12->Branch("REC_CovMat_C11", &REC_CovMat_C11_vec);
  clas12->Branch("REC_CovMat_C12", &REC_CovMat_C12_vec);
  clas12->Branch("REC_CovMat_C13", &REC_CovMat_C13_vec);
  clas12->Branch("REC_CovMat_C14", &REC_CovMat_C14_vec);
  clas12->Branch("REC_CovMat_C15", &REC_CovMat_C15_vec);
  clas12->Branch("REC_CovMat_C22", &REC_CovMat_C22_vec);
  clas12->Branch("REC_CovMat_C23", &REC_CovMat_C23_vec);
  clas12->Branch("REC_CovMat_C24", &REC_CovMat_C24_vec);
  clas12->Branch("REC_CovMat_C25", &REC_CovMat_C25_vec);
  clas12->Branch("REC_CovMat_C33", &REC_CovMat_C33_vec);
  clas12->Branch("REC_CovMat_C34", &REC_CovMat_C34_vec);
  clas12->Branch("REC_CovMat_C35", &REC_CovMat_C35_vec);
  clas12->Branch("REC_CovMat_C44", &REC_CovMat_C44_vec);
  clas12->Branch("REC_CovMat_C45", &REC_CovMat_C45_vec);
  clas12->Branch("REC_CovMat_C55", &REC_CovMat_C55_vec);
  clas12->Branch("REC_VertDoca_index1", &REC_VertDoca_index1_vec);
  clas12->Branch("REC_VertDoca_index2", &REC_VertDoca_index2_vec);
  clas12->Branch("REC_VertDoca_x", &REC_VertDoca_x_vec);
  clas12->Branch("REC_VertDoca_y", &REC_VertDoca_y_vec);
  clas12->Branch("REC_VertDoca_z", &REC_VertDoca_z_vec);
  clas12->Branch("REC_VertDoca_x1", &REC_VertDoca_x1_vec);
  clas12->Branch("REC_VertDoca_y1", &REC_VertDoca_y1_vec);
  clas12->Branch("REC_VertDoca_z1", &REC_VertDoca_z1_vec);
  clas12->Branch("REC_VertDoca_cx1", &REC_VertDoca_cx1_vec);
  clas12->Branch("REC_VertDoca_cy1", &REC_VertDoca_cy1_vec);
  clas12->Branch("REC_VertDoca_cz1", &REC_VertDoca_cz1_vec);
  clas12->Branch("REC_VertDoca_x2", &REC_VertDoca_x2_vec);
  clas12->Branch("REC_VertDoca_y2", &REC_VertDoca_y2_vec);
  clas12->Branch("REC_VertDoca_z2", &REC_VertDoca_z2_vec);
  clas12->Branch("REC_VertDoca_cx2", &REC_VertDoca_cx2_vec);
  clas12->Branch("REC_VertDoca_cy2", &REC_VertDoca_cy2_vec);
  clas12->Branch("REC_VertDoca_cz2", &REC_VertDoca_cz2_vec);
  clas12->Branch("REC_VertDoca_r", &REC_VertDoca_r_vec);
  clas12->Branch("REC_Traj_pindex", &REC_Traj_pindex_vec);
  clas12->Branch("REC_Traj_index", &REC_Traj_index_vec);
  clas12->Branch("REC_Traj_detId", &REC_Traj_detId_vec);
  clas12->Branch("REC_Traj_q", &REC_Traj_q_vec);
  clas12->Branch("REC_Traj_x", &REC_Traj_x_vec);
  clas12->Branch("REC_Traj_y", &REC_Traj_y_vec);
  clas12->Branch("REC_Traj_z", &REC_Traj_z_vec);
  clas12->Branch("REC_Traj_cx", &REC_Traj_cx_vec);
  clas12->Branch("REC_Traj_cy", &REC_Traj_cy_vec);
  clas12->Branch("REC_Traj_cz", &REC_Traj_cz_vec);
  clas12->Branch("REC_Traj_pathlength", &REC_Traj_pathlength_vec);

  int entry = 0;
  int l     = 0;
  while (reader->next() == true) {
    entry++;
    if ((entry % 1000) == 0)
      std::cerr << "\t" << entry << "\r\r" << std::flush;

    l = REC_Event_NRUN_node->getLength();
    REC_Event_NRUN_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Event_NRUN_vec.at(i) = REC_Event_NRUN_node->getValue(i);

    l = REC_Event_NEVENT_node->getLength();
    REC_Event_NEVENT_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Event_NEVENT_vec.at(i) = REC_Event_NEVENT_node->getValue(i);

    l = REC_Event_EVNTime_node->getLength();
    REC_Event_EVNTime_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Event_EVNTime_vec.at(i) = REC_Event_EVNTime_node->getValue(i);

    l = REC_Event_TYPE_node->getLength();
    REC_Event_TYPE_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Event_TYPE_vec.at(i) = REC_Event_TYPE_node->getValue(i);

    l = REC_Event_EvCAT_node->getLength();
    REC_Event_EvCAT_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Event_EvCAT_vec.at(i) = REC_Event_EvCAT_node->getValue(i);

    l = REC_Event_NPGP_node->getLength();
    REC_Event_NPGP_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Event_NPGP_vec.at(i) = REC_Event_NPGP_node->getValue(i);

    l = REC_Event_TRG_node->getLength();
    REC_Event_TRG_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Event_TRG_vec.at(i) = REC_Event_TRG_node->getValue(i);

    l = REC_Event_BCG_node->getLength();
    REC_Event_BCG_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Event_BCG_vec.at(i) = REC_Event_BCG_node->getValue(i);

    l = REC_Event_LT_node->getLength();
    REC_Event_LT_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Event_LT_vec.at(i) = REC_Event_LT_node->getValue(i);

    l = REC_Event_STTime_node->getLength();
    REC_Event_STTime_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Event_STTime_vec.at(i) = REC_Event_STTime_node->getValue(i);

    l = REC_Event_RFTime_node->getLength();
    REC_Event_RFTime_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Event_RFTime_vec.at(i) = REC_Event_RFTime_node->getValue(i);

    l = REC_Event_Helic_node->getLength();
    REC_Event_Helic_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Event_Helic_vec.at(i) = REC_Event_Helic_node->getValue(i);

    l = REC_Event_PTIME_node->getLength();
    REC_Event_PTIME_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Event_PTIME_vec.at(i) = REC_Event_PTIME_node->getValue(i);

    l = REC_Particle_pid_node->getLength();
    REC_Particle_pid_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Particle_pid_vec.at(i) = REC_Particle_pid_node->getValue(i);

    l = REC_Particle_px_node->getLength();
    REC_Particle_px_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Particle_px_vec.at(i) = REC_Particle_px_node->getValue(i);

    l = REC_Particle_py_node->getLength();
    REC_Particle_py_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Particle_py_vec.at(i) = REC_Particle_py_node->getValue(i);

    l = REC_Particle_pz_node->getLength();
    REC_Particle_pz_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Particle_pz_vec.at(i) = REC_Particle_pz_node->getValue(i);

    l = REC_Particle_vx_node->getLength();
    REC_Particle_vx_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Particle_vx_vec.at(i) = REC_Particle_vx_node->getValue(i);

    l = REC_Particle_vy_node->getLength();
    REC_Particle_vy_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Particle_vy_vec.at(i) = REC_Particle_vy_node->getValue(i);

    l = REC_Particle_vz_node->getLength();
    REC_Particle_vz_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Particle_vz_vec.at(i) = REC_Particle_vz_node->getValue(i);

    l = REC_Particle_charge_node->getLength();
    REC_Particle_charge_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Particle_charge_vec.at(i) = REC_Particle_charge_node->getValue(i);

    l = REC_Particle_beta_node->getLength();
    REC_Particle_beta_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Particle_beta_vec.at(i) = REC_Particle_beta_node->getValue(i);

    l = REC_Particle_chi2pid_node->getLength();
    REC_Particle_chi2pid_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Particle_chi2pid_vec.at(i) = REC_Particle_chi2pid_node->getValue(i);

    l = REC_Particle_status_node->getLength();
    REC_Particle_status_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Particle_status_vec.at(i) = REC_Particle_status_node->getValue(i);

    l = REC_Calorimeter_index_node->getLength();
    REC_Calorimeter_index_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_index_vec.at(i) = REC_Calorimeter_index_node->getValue(i);

    l = REC_Calorimeter_pindex_node->getLength();
    REC_Calorimeter_pindex_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_pindex_vec.at(i) = REC_Calorimeter_pindex_node->getValue(i);

    l = REC_Calorimeter_detector_node->getLength();
    REC_Calorimeter_detector_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_detector_vec.at(i) = REC_Calorimeter_detector_node->getValue(i);

    l = REC_Calorimeter_sector_node->getLength();
    REC_Calorimeter_sector_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_sector_vec.at(i) = REC_Calorimeter_sector_node->getValue(i);

    l = REC_Calorimeter_layer_node->getLength();
    REC_Calorimeter_layer_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_layer_vec.at(i) = REC_Calorimeter_layer_node->getValue(i);

    l = REC_Calorimeter_energy_node->getLength();
    REC_Calorimeter_energy_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_energy_vec.at(i) = REC_Calorimeter_energy_node->getValue(i);

    l = REC_Calorimeter_time_node->getLength();
    REC_Calorimeter_time_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_time_vec.at(i) = REC_Calorimeter_time_node->getValue(i);

    l = REC_Calorimeter_path_node->getLength();
    REC_Calorimeter_path_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_path_vec.at(i) = REC_Calorimeter_path_node->getValue(i);

    l = REC_Calorimeter_chi2_node->getLength();
    REC_Calorimeter_chi2_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_chi2_vec.at(i) = REC_Calorimeter_chi2_node->getValue(i);

    l = REC_Calorimeter_x_node->getLength();
    REC_Calorimeter_x_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_x_vec.at(i) = REC_Calorimeter_x_node->getValue(i);

    l = REC_Calorimeter_y_node->getLength();
    REC_Calorimeter_y_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_y_vec.at(i) = REC_Calorimeter_y_node->getValue(i);

    l = REC_Calorimeter_z_node->getLength();
    REC_Calorimeter_z_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_z_vec.at(i) = REC_Calorimeter_z_node->getValue(i);

    l = REC_Calorimeter_hx_node->getLength();
    REC_Calorimeter_hx_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_hx_vec.at(i) = REC_Calorimeter_hx_node->getValue(i);

    l = REC_Calorimeter_hy_node->getLength();
    REC_Calorimeter_hy_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_hy_vec.at(i) = REC_Calorimeter_hy_node->getValue(i);

    l = REC_Calorimeter_hz_node->getLength();
    REC_Calorimeter_hz_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_hz_vec.at(i) = REC_Calorimeter_hz_node->getValue(i);

    l = REC_Calorimeter_lu_node->getLength();
    REC_Calorimeter_lu_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_lu_vec.at(i) = REC_Calorimeter_lu_node->getValue(i);

    l = REC_Calorimeter_lv_node->getLength();
    REC_Calorimeter_lv_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_lv_vec.at(i) = REC_Calorimeter_lv_node->getValue(i);

    l = REC_Calorimeter_lw_node->getLength();
    REC_Calorimeter_lw_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_lw_vec.at(i) = REC_Calorimeter_lw_node->getValue(i);

    l = REC_Calorimeter_du_node->getLength();
    REC_Calorimeter_du_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_du_vec.at(i) = REC_Calorimeter_du_node->getValue(i);

    l = REC_Calorimeter_dv_node->getLength();
    REC_Calorimeter_dv_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_dv_vec.at(i) = REC_Calorimeter_dv_node->getValue(i);

    l = REC_Calorimeter_dw_node->getLength();
    REC_Calorimeter_dw_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_dw_vec.at(i) = REC_Calorimeter_dw_node->getValue(i);

    l = REC_Calorimeter_m2u_node->getLength();
    REC_Calorimeter_m2u_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_m2u_vec.at(i) = REC_Calorimeter_m2u_node->getValue(i);

    l = REC_Calorimeter_m2v_node->getLength();
    REC_Calorimeter_m2v_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_m2v_vec.at(i) = REC_Calorimeter_m2v_node->getValue(i);

    l = REC_Calorimeter_m2w_node->getLength();
    REC_Calorimeter_m2w_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_m2w_vec.at(i) = REC_Calorimeter_m2w_node->getValue(i);

    l = REC_Calorimeter_m3u_node->getLength();
    REC_Calorimeter_m3u_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_m3u_vec.at(i) = REC_Calorimeter_m3u_node->getValue(i);

    l = REC_Calorimeter_m3v_node->getLength();
    REC_Calorimeter_m3v_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_m3v_vec.at(i) = REC_Calorimeter_m3v_node->getValue(i);

    l = REC_Calorimeter_m3w_node->getLength();
    REC_Calorimeter_m3w_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_m3w_vec.at(i) = REC_Calorimeter_m3w_node->getValue(i);

    l = REC_Calorimeter_status_node->getLength();
    REC_Calorimeter_status_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Calorimeter_status_vec.at(i) = REC_Calorimeter_status_node->getValue(i);

    l = REC_Cherenkov_index_node->getLength();
    REC_Cherenkov_index_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_index_vec.at(i) = REC_Cherenkov_index_node->getValue(i);

    l = REC_Cherenkov_pindex_node->getLength();
    REC_Cherenkov_pindex_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_pindex_vec.at(i) = REC_Cherenkov_pindex_node->getValue(i);

    l = REC_Cherenkov_detector_node->getLength();
    REC_Cherenkov_detector_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_detector_vec.at(i) = REC_Cherenkov_detector_node->getValue(i);

    l = REC_Cherenkov_sector_node->getLength();
    REC_Cherenkov_sector_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_sector_vec.at(i) = REC_Cherenkov_sector_node->getValue(i);

    l = REC_Cherenkov_nphe_node->getLength();
    REC_Cherenkov_nphe_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_nphe_vec.at(i) = REC_Cherenkov_nphe_node->getValue(i);

    l = REC_Cherenkov_time_node->getLength();
    REC_Cherenkov_time_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_time_vec.at(i) = REC_Cherenkov_time_node->getValue(i);

    l = REC_Cherenkov_path_node->getLength();
    REC_Cherenkov_path_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_path_vec.at(i) = REC_Cherenkov_path_node->getValue(i);

    l = REC_Cherenkov_chi2_node->getLength();
    REC_Cherenkov_chi2_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_chi2_vec.at(i) = REC_Cherenkov_chi2_node->getValue(i);

    l = REC_Cherenkov_x_node->getLength();
    REC_Cherenkov_x_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_x_vec.at(i) = REC_Cherenkov_x_node->getValue(i);

    l = REC_Cherenkov_y_node->getLength();
    REC_Cherenkov_y_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_y_vec.at(i) = REC_Cherenkov_y_node->getValue(i);

    l = REC_Cherenkov_z_node->getLength();
    REC_Cherenkov_z_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_z_vec.at(i) = REC_Cherenkov_z_node->getValue(i);

    l = REC_Cherenkov_theta_node->getLength();
    REC_Cherenkov_theta_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_theta_vec.at(i) = REC_Cherenkov_theta_node->getValue(i);

    l = REC_Cherenkov_phi_node->getLength();
    REC_Cherenkov_phi_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_phi_vec.at(i) = REC_Cherenkov_phi_node->getValue(i);

    l = REC_Cherenkov_dtheta_node->getLength();
    REC_Cherenkov_dtheta_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_dtheta_vec.at(i) = REC_Cherenkov_dtheta_node->getValue(i);

    l = REC_Cherenkov_dphi_node->getLength();
    REC_Cherenkov_dphi_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_dphi_vec.at(i) = REC_Cherenkov_dphi_node->getValue(i);

    l = REC_Cherenkov_status_node->getLength();
    REC_Cherenkov_status_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Cherenkov_status_vec.at(i) = REC_Cherenkov_status_node->getValue(i);

    l = REC_ForwardTagger_index_node->getLength();
    REC_ForwardTagger_index_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_index_vec.at(i) = REC_ForwardTagger_index_node->getValue(i);

    l = REC_ForwardTagger_pindex_node->getLength();
    REC_ForwardTagger_pindex_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_pindex_vec.at(i) = REC_ForwardTagger_pindex_node->getValue(i);

    l = REC_ForwardTagger_detector_node->getLength();
    REC_ForwardTagger_detector_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_detector_vec.at(i) = REC_ForwardTagger_detector_node->getValue(i);

    l = REC_ForwardTagger_energy_node->getLength();
    REC_ForwardTagger_energy_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_energy_vec.at(i) = REC_ForwardTagger_energy_node->getValue(i);

    l = REC_ForwardTagger_time_node->getLength();
    REC_ForwardTagger_time_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_time_vec.at(i) = REC_ForwardTagger_time_node->getValue(i);

    l = REC_ForwardTagger_path_node->getLength();
    REC_ForwardTagger_path_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_path_vec.at(i) = REC_ForwardTagger_path_node->getValue(i);

    l = REC_ForwardTagger_chi2_node->getLength();
    REC_ForwardTagger_chi2_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_chi2_vec.at(i) = REC_ForwardTagger_chi2_node->getValue(i);

    l = REC_ForwardTagger_x_node->getLength();
    REC_ForwardTagger_x_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_x_vec.at(i) = REC_ForwardTagger_x_node->getValue(i);

    l = REC_ForwardTagger_y_node->getLength();
    REC_ForwardTagger_y_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_y_vec.at(i) = REC_ForwardTagger_y_node->getValue(i);

    l = REC_ForwardTagger_z_node->getLength();
    REC_ForwardTagger_z_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_z_vec.at(i) = REC_ForwardTagger_z_node->getValue(i);

    l = REC_ForwardTagger_dx_node->getLength();
    REC_ForwardTagger_dx_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_dx_vec.at(i) = REC_ForwardTagger_dx_node->getValue(i);

    l = REC_ForwardTagger_dy_node->getLength();
    REC_ForwardTagger_dy_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_dy_vec.at(i) = REC_ForwardTagger_dy_node->getValue(i);

    l = REC_ForwardTagger_radius_node->getLength();
    REC_ForwardTagger_radius_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_radius_vec.at(i) = REC_ForwardTagger_radius_node->getValue(i);

    l = REC_ForwardTagger_size_node->getLength();
    REC_ForwardTagger_size_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_size_vec.at(i) = REC_ForwardTagger_size_node->getValue(i);

    l = REC_ForwardTagger_status_node->getLength();
    REC_ForwardTagger_status_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_ForwardTagger_status_vec.at(i) = REC_ForwardTagger_status_node->getValue(i);

    l = REC_Scintillator_index_node->getLength();
    REC_Scintillator_index_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_index_vec.at(i) = REC_Scintillator_index_node->getValue(i);

    l = REC_Scintillator_pindex_node->getLength();
    REC_Scintillator_pindex_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_pindex_vec.at(i) = REC_Scintillator_pindex_node->getValue(i);

    l = REC_Scintillator_detector_node->getLength();
    REC_Scintillator_detector_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_detector_vec.at(i) = REC_Scintillator_detector_node->getValue(i);

    l = REC_Scintillator_sector_node->getLength();
    REC_Scintillator_sector_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_sector_vec.at(i) = REC_Scintillator_sector_node->getValue(i);

    l = REC_Scintillator_layer_node->getLength();
    REC_Scintillator_layer_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_layer_vec.at(i) = REC_Scintillator_layer_node->getValue(i);

    l = REC_Scintillator_component_node->getLength();
    REC_Scintillator_component_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_component_vec.at(i) = REC_Scintillator_component_node->getValue(i);

    l = REC_Scintillator_energy_node->getLength();
    REC_Scintillator_energy_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_energy_vec.at(i) = REC_Scintillator_energy_node->getValue(i);

    l = REC_Scintillator_time_node->getLength();
    REC_Scintillator_time_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_time_vec.at(i) = REC_Scintillator_time_node->getValue(i);

    l = REC_Scintillator_path_node->getLength();
    REC_Scintillator_path_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_path_vec.at(i) = REC_Scintillator_path_node->getValue(i);

    l = REC_Scintillator_chi2_node->getLength();
    REC_Scintillator_chi2_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_chi2_vec.at(i) = REC_Scintillator_chi2_node->getValue(i);

    l = REC_Scintillator_x_node->getLength();
    REC_Scintillator_x_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_x_vec.at(i) = REC_Scintillator_x_node->getValue(i);

    l = REC_Scintillator_y_node->getLength();
    REC_Scintillator_y_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_y_vec.at(i) = REC_Scintillator_y_node->getValue(i);

    l = REC_Scintillator_z_node->getLength();
    REC_Scintillator_z_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_z_vec.at(i) = REC_Scintillator_z_node->getValue(i);

    l = REC_Scintillator_hx_node->getLength();
    REC_Scintillator_hx_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_hx_vec.at(i) = REC_Scintillator_hx_node->getValue(i);

    l = REC_Scintillator_hy_node->getLength();
    REC_Scintillator_hy_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_hy_vec.at(i) = REC_Scintillator_hy_node->getValue(i);

    l = REC_Scintillator_hz_node->getLength();
    REC_Scintillator_hz_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_hz_vec.at(i) = REC_Scintillator_hz_node->getValue(i);

    l = REC_Scintillator_status_node->getLength();
    REC_Scintillator_status_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Scintillator_status_vec.at(i) = REC_Scintillator_status_node->getValue(i);

    l = REC_Track_index_node->getLength();
    REC_Track_index_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_index_vec.at(i) = REC_Track_index_node->getValue(i);

    l = REC_Track_pindex_node->getLength();
    REC_Track_pindex_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_pindex_vec.at(i) = REC_Track_pindex_node->getValue(i);

    l = REC_Track_detector_node->getLength();
    REC_Track_detector_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_detector_vec.at(i) = REC_Track_detector_node->getValue(i);

    l = REC_Track_sector_node->getLength();
    REC_Track_sector_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_sector_vec.at(i) = REC_Track_sector_node->getValue(i);

    l = REC_Track_status_node->getLength();
    REC_Track_status_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_status_vec.at(i) = REC_Track_status_node->getValue(i);

    l = REC_Track_q_node->getLength();
    REC_Track_q_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_q_vec.at(i) = REC_Track_q_node->getValue(i);

    l = REC_Track_chi2_node->getLength();
    REC_Track_chi2_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_chi2_vec.at(i) = REC_Track_chi2_node->getValue(i);

    l = REC_Track_NDF_node->getLength();
    REC_Track_NDF_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_NDF_vec.at(i) = REC_Track_NDF_node->getValue(i);

    l = REC_Track_px_nomm_node->getLength();
    REC_Track_px_nomm_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_px_nomm_vec.at(i) = REC_Track_px_nomm_node->getValue(i);

    l = REC_Track_py_nomm_node->getLength();
    REC_Track_py_nomm_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_py_nomm_vec.at(i) = REC_Track_py_nomm_node->getValue(i);

    l = REC_Track_pz_nomm_node->getLength();
    REC_Track_pz_nomm_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_pz_nomm_vec.at(i) = REC_Track_pz_nomm_node->getValue(i);

    l = REC_Track_vx_nomm_node->getLength();
    REC_Track_vx_nomm_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_vx_nomm_vec.at(i) = REC_Track_vx_nomm_node->getValue(i);

    l = REC_Track_vy_nomm_node->getLength();
    REC_Track_vy_nomm_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_vy_nomm_vec.at(i) = REC_Track_vy_nomm_node->getValue(i);

    l = REC_Track_vz_nomm_node->getLength();
    REC_Track_vz_nomm_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_vz_nomm_vec.at(i) = REC_Track_vz_nomm_node->getValue(i);

    l = REC_Track_chi2_nomm_node->getLength();
    REC_Track_chi2_nomm_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_chi2_nomm_vec.at(i) = REC_Track_chi2_nomm_node->getValue(i);

    l = REC_Track_NDF_nomm_node->getLength();
    REC_Track_NDF_nomm_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Track_NDF_nomm_vec.at(i) = REC_Track_NDF_nomm_node->getValue(i);

    l = REC_TrackCross_index_node->getLength();
    REC_TrackCross_index_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_TrackCross_index_vec.at(i) = REC_TrackCross_index_node->getValue(i);

    l = REC_TrackCross_pindex_node->getLength();
    REC_TrackCross_pindex_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_TrackCross_pindex_vec.at(i) = REC_TrackCross_pindex_node->getValue(i);

    l = REC_TrackCross_detector_node->getLength();
    REC_TrackCross_detector_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_TrackCross_detector_vec.at(i) = REC_TrackCross_detector_node->getValue(i);

    l = REC_TrackCross_sector_node->getLength();
    REC_TrackCross_sector_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_TrackCross_sector_vec.at(i) = REC_TrackCross_sector_node->getValue(i);

    l = REC_TrackCross_layer_node->getLength();
    REC_TrackCross_layer_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_TrackCross_layer_vec.at(i) = REC_TrackCross_layer_node->getValue(i);

    l = REC_TrackCross_c_x_node->getLength();
    REC_TrackCross_c_x_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_TrackCross_c_x_vec.at(i) = REC_TrackCross_c_x_node->getValue(i);

    l = REC_TrackCross_c_y_node->getLength();
    REC_TrackCross_c_y_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_TrackCross_c_y_vec.at(i) = REC_TrackCross_c_y_node->getValue(i);

    l = REC_TrackCross_c_z_node->getLength();
    REC_TrackCross_c_z_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_TrackCross_c_z_vec.at(i) = REC_TrackCross_c_z_node->getValue(i);

    l = REC_TrackCross_c_ux_node->getLength();
    REC_TrackCross_c_ux_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_TrackCross_c_ux_vec.at(i) = REC_TrackCross_c_ux_node->getValue(i);

    l = REC_TrackCross_c_uy_node->getLength();
    REC_TrackCross_c_uy_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_TrackCross_c_uy_vec.at(i) = REC_TrackCross_c_uy_node->getValue(i);

    l = REC_TrackCross_c_uz_node->getLength();
    REC_TrackCross_c_uz_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_TrackCross_c_uz_vec.at(i) = REC_TrackCross_c_uz_node->getValue(i);

    l = REC_TrackCross_status_node->getLength();
    REC_TrackCross_status_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_TrackCross_status_vec.at(i) = REC_TrackCross_status_node->getValue(i);

    l = REC_CovMat_index_node->getLength();
    REC_CovMat_index_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_index_vec.at(i) = REC_CovMat_index_node->getValue(i);

    l = REC_CovMat_pindex_node->getLength();
    REC_CovMat_pindex_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_pindex_vec.at(i) = REC_CovMat_pindex_node->getValue(i);

    l = REC_CovMat_C11_node->getLength();
    REC_CovMat_C11_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C11_vec.at(i) = REC_CovMat_C11_node->getValue(i);

    l = REC_CovMat_C12_node->getLength();
    REC_CovMat_C12_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C12_vec.at(i) = REC_CovMat_C12_node->getValue(i);

    l = REC_CovMat_C13_node->getLength();
    REC_CovMat_C13_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C13_vec.at(i) = REC_CovMat_C13_node->getValue(i);

    l = REC_CovMat_C14_node->getLength();
    REC_CovMat_C14_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C14_vec.at(i) = REC_CovMat_C14_node->getValue(i);

    l = REC_CovMat_C15_node->getLength();
    REC_CovMat_C15_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C15_vec.at(i) = REC_CovMat_C15_node->getValue(i);

    l = REC_CovMat_C22_node->getLength();
    REC_CovMat_C22_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C22_vec.at(i) = REC_CovMat_C22_node->getValue(i);

    l = REC_CovMat_C23_node->getLength();
    REC_CovMat_C23_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C23_vec.at(i) = REC_CovMat_C23_node->getValue(i);

    l = REC_CovMat_C24_node->getLength();
    REC_CovMat_C24_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C24_vec.at(i) = REC_CovMat_C24_node->getValue(i);

    l = REC_CovMat_C25_node->getLength();
    REC_CovMat_C25_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C25_vec.at(i) = REC_CovMat_C25_node->getValue(i);

    l = REC_CovMat_C33_node->getLength();
    REC_CovMat_C33_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C33_vec.at(i) = REC_CovMat_C33_node->getValue(i);

    l = REC_CovMat_C34_node->getLength();
    REC_CovMat_C34_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C34_vec.at(i) = REC_CovMat_C34_node->getValue(i);

    l = REC_CovMat_C35_node->getLength();
    REC_CovMat_C35_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C35_vec.at(i) = REC_CovMat_C35_node->getValue(i);

    l = REC_CovMat_C44_node->getLength();
    REC_CovMat_C44_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C44_vec.at(i) = REC_CovMat_C44_node->getValue(i);

    l = REC_CovMat_C45_node->getLength();
    REC_CovMat_C45_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C45_vec.at(i) = REC_CovMat_C45_node->getValue(i);

    l = REC_CovMat_C55_node->getLength();
    REC_CovMat_C55_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_CovMat_C55_vec.at(i) = REC_CovMat_C55_node->getValue(i);

    l = REC_VertDoca_index1_node->getLength();
    REC_VertDoca_index1_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_index1_vec.at(i) = REC_VertDoca_index1_node->getValue(i);

    l = REC_VertDoca_index2_node->getLength();
    REC_VertDoca_index2_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_index2_vec.at(i) = REC_VertDoca_index2_node->getValue(i);

    l = REC_VertDoca_x_node->getLength();
    REC_VertDoca_x_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_x_vec.at(i) = REC_VertDoca_x_node->getValue(i);

    l = REC_VertDoca_y_node->getLength();
    REC_VertDoca_y_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_y_vec.at(i) = REC_VertDoca_y_node->getValue(i);

    l = REC_VertDoca_z_node->getLength();
    REC_VertDoca_z_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_z_vec.at(i) = REC_VertDoca_z_node->getValue(i);

    l = REC_VertDoca_x1_node->getLength();
    REC_VertDoca_x1_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_x1_vec.at(i) = REC_VertDoca_x1_node->getValue(i);

    l = REC_VertDoca_y1_node->getLength();
    REC_VertDoca_y1_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_y1_vec.at(i) = REC_VertDoca_y1_node->getValue(i);

    l = REC_VertDoca_z1_node->getLength();
    REC_VertDoca_z1_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_z1_vec.at(i) = REC_VertDoca_z1_node->getValue(i);

    l = REC_VertDoca_cx1_node->getLength();
    REC_VertDoca_cx1_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_cx1_vec.at(i) = REC_VertDoca_cx1_node->getValue(i);

    l = REC_VertDoca_cy1_node->getLength();
    REC_VertDoca_cy1_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_cy1_vec.at(i) = REC_VertDoca_cy1_node->getValue(i);

    l = REC_VertDoca_cz1_node->getLength();
    REC_VertDoca_cz1_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_cz1_vec.at(i) = REC_VertDoca_cz1_node->getValue(i);

    l = REC_VertDoca_x2_node->getLength();
    REC_VertDoca_x2_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_x2_vec.at(i) = REC_VertDoca_x2_node->getValue(i);

    l = REC_VertDoca_y2_node->getLength();
    REC_VertDoca_y2_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_y2_vec.at(i) = REC_VertDoca_y2_node->getValue(i);

    l = REC_VertDoca_z2_node->getLength();
    REC_VertDoca_z2_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_z2_vec.at(i) = REC_VertDoca_z2_node->getValue(i);

    l = REC_VertDoca_cx2_node->getLength();
    REC_VertDoca_cx2_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_cx2_vec.at(i) = REC_VertDoca_cx2_node->getValue(i);

    l = REC_VertDoca_cy2_node->getLength();
    REC_VertDoca_cy2_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_cy2_vec.at(i) = REC_VertDoca_cy2_node->getValue(i);

    l = REC_VertDoca_cz2_node->getLength();
    REC_VertDoca_cz2_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_cz2_vec.at(i) = REC_VertDoca_cz2_node->getValue(i);

    l = REC_VertDoca_r_node->getLength();
    REC_VertDoca_r_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_VertDoca_r_vec.at(i) = REC_VertDoca_r_node->getValue(i);

    l = REC_Traj_pindex_node->getLength();
    REC_Traj_pindex_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Traj_pindex_vec.at(i) = REC_Traj_pindex_node->getValue(i);

    l = REC_Traj_index_node->getLength();
    REC_Traj_index_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Traj_index_vec.at(i) = REC_Traj_index_node->getValue(i);

    l = REC_Traj_detId_node->getLength();
    REC_Traj_detId_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Traj_detId_vec.at(i) = REC_Traj_detId_node->getValue(i);

    l = REC_Traj_q_node->getLength();
    REC_Traj_q_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Traj_q_vec.at(i) = REC_Traj_q_node->getValue(i);

    l = REC_Traj_x_node->getLength();
    REC_Traj_x_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Traj_x_vec.at(i) = REC_Traj_x_node->getValue(i);

    l = REC_Traj_y_node->getLength();
    REC_Traj_y_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Traj_y_vec.at(i) = REC_Traj_y_node->getValue(i);

    l = REC_Traj_z_node->getLength();
    REC_Traj_z_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Traj_z_vec.at(i) = REC_Traj_z_node->getValue(i);

    l = REC_Traj_cx_node->getLength();
    REC_Traj_cx_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Traj_cx_vec.at(i) = REC_Traj_cx_node->getValue(i);

    l = REC_Traj_cy_node->getLength();
    REC_Traj_cy_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Traj_cy_vec.at(i) = REC_Traj_cy_node->getValue(i);

    l = REC_Traj_cz_node->getLength();
    REC_Traj_cz_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Traj_cz_vec.at(i) = REC_Traj_cz_node->getValue(i);

    l = REC_Traj_pathlength_node->getLength();
    REC_Traj_pathlength_vec.resize(l);
    for (int i = 0; i < l; i++)
      REC_Traj_pathlength_vec.at(i) = REC_Traj_pathlength_node->getValue(i);

    clas12->Fill();
    REC_Event_NRUN_vec.clear();
    REC_Event_NEVENT_vec.clear();
    REC_Event_EVNTime_vec.clear();
    REC_Event_TYPE_vec.clear();
    REC_Event_EvCAT_vec.clear();
    REC_Event_NPGP_vec.clear();
    REC_Event_TRG_vec.clear();
    REC_Event_BCG_vec.clear();
    REC_Event_LT_vec.clear();
    REC_Event_STTime_vec.clear();
    REC_Event_RFTime_vec.clear();
    REC_Event_Helic_vec.clear();
    REC_Event_PTIME_vec.clear();
    REC_Particle_pid_vec.clear();
    REC_Particle_px_vec.clear();
    REC_Particle_py_vec.clear();
    REC_Particle_pz_vec.clear();
    REC_Particle_vx_vec.clear();
    REC_Particle_vy_vec.clear();
    REC_Particle_vz_vec.clear();
    REC_Particle_charge_vec.clear();
    REC_Particle_beta_vec.clear();
    REC_Particle_chi2pid_vec.clear();
    REC_Particle_status_vec.clear();
    REC_Calorimeter_index_vec.clear();
    REC_Calorimeter_pindex_vec.clear();
    REC_Calorimeter_detector_vec.clear();
    REC_Calorimeter_sector_vec.clear();
    REC_Calorimeter_layer_vec.clear();
    REC_Calorimeter_energy_vec.clear();
    REC_Calorimeter_time_vec.clear();
    REC_Calorimeter_path_vec.clear();
    REC_Calorimeter_chi2_vec.clear();
    REC_Calorimeter_x_vec.clear();
    REC_Calorimeter_y_vec.clear();
    REC_Calorimeter_z_vec.clear();
    REC_Calorimeter_hx_vec.clear();
    REC_Calorimeter_hy_vec.clear();
    REC_Calorimeter_hz_vec.clear();
    REC_Calorimeter_lu_vec.clear();
    REC_Calorimeter_lv_vec.clear();
    REC_Calorimeter_lw_vec.clear();
    REC_Calorimeter_du_vec.clear();
    REC_Calorimeter_dv_vec.clear();
    REC_Calorimeter_dw_vec.clear();
    REC_Calorimeter_m2u_vec.clear();
    REC_Calorimeter_m2v_vec.clear();
    REC_Calorimeter_m2w_vec.clear();
    REC_Calorimeter_m3u_vec.clear();
    REC_Calorimeter_m3v_vec.clear();
    REC_Calorimeter_m3w_vec.clear();
    REC_Calorimeter_status_vec.clear();
    REC_Cherenkov_index_vec.clear();
    REC_Cherenkov_pindex_vec.clear();
    REC_Cherenkov_detector_vec.clear();
    REC_Cherenkov_sector_vec.clear();
    REC_Cherenkov_nphe_vec.clear();
    REC_Cherenkov_time_vec.clear();
    REC_Cherenkov_path_vec.clear();
    REC_Cherenkov_chi2_vec.clear();
    REC_Cherenkov_x_vec.clear();
    REC_Cherenkov_y_vec.clear();
    REC_Cherenkov_z_vec.clear();
    REC_Cherenkov_theta_vec.clear();
    REC_Cherenkov_phi_vec.clear();
    REC_Cherenkov_dtheta_vec.clear();
    REC_Cherenkov_dphi_vec.clear();
    REC_Cherenkov_status_vec.clear();
    REC_ForwardTagger_index_vec.clear();
    REC_ForwardTagger_pindex_vec.clear();
    REC_ForwardTagger_detector_vec.clear();
    REC_ForwardTagger_energy_vec.clear();
    REC_ForwardTagger_time_vec.clear();
    REC_ForwardTagger_path_vec.clear();
    REC_ForwardTagger_chi2_vec.clear();
    REC_ForwardTagger_x_vec.clear();
    REC_ForwardTagger_y_vec.clear();
    REC_ForwardTagger_z_vec.clear();
    REC_ForwardTagger_dx_vec.clear();
    REC_ForwardTagger_dy_vec.clear();
    REC_ForwardTagger_radius_vec.clear();
    REC_ForwardTagger_size_vec.clear();
    REC_ForwardTagger_status_vec.clear();
    REC_Scintillator_index_vec.clear();
    REC_Scintillator_pindex_vec.clear();
    REC_Scintillator_detector_vec.clear();
    REC_Scintillator_sector_vec.clear();
    REC_Scintillator_layer_vec.clear();
    REC_Scintillator_component_vec.clear();
    REC_Scintillator_energy_vec.clear();
    REC_Scintillator_time_vec.clear();
    REC_Scintillator_path_vec.clear();
    REC_Scintillator_chi2_vec.clear();
    REC_Scintillator_x_vec.clear();
    REC_Scintillator_y_vec.clear();
    REC_Scintillator_z_vec.clear();
    REC_Scintillator_hx_vec.clear();
    REC_Scintillator_hy_vec.clear();
    REC_Scintillator_hz_vec.clear();
    REC_Scintillator_status_vec.clear();
    REC_Track_index_vec.clear();
    REC_Track_pindex_vec.clear();
    REC_Track_detector_vec.clear();
    REC_Track_sector_vec.clear();
    REC_Track_status_vec.clear();
    REC_Track_q_vec.clear();
    REC_Track_chi2_vec.clear();
    REC_Track_NDF_vec.clear();
    REC_Track_px_nomm_vec.clear();
    REC_Track_py_nomm_vec.clear();
    REC_Track_pz_nomm_vec.clear();
    REC_Track_vx_nomm_vec.clear();
    REC_Track_vy_nomm_vec.clear();
    REC_Track_vz_nomm_vec.clear();
    REC_Track_chi2_nomm_vec.clear();
    REC_Track_NDF_nomm_vec.clear();
    REC_TrackCross_index_vec.clear();
    REC_TrackCross_pindex_vec.clear();
    REC_TrackCross_detector_vec.clear();
    REC_TrackCross_sector_vec.clear();
    REC_TrackCross_layer_vec.clear();
    REC_TrackCross_c_x_vec.clear();
    REC_TrackCross_c_y_vec.clear();
    REC_TrackCross_c_z_vec.clear();
    REC_TrackCross_c_ux_vec.clear();
    REC_TrackCross_c_uy_vec.clear();
    REC_TrackCross_c_uz_vec.clear();
    REC_TrackCross_status_vec.clear();
    REC_CovMat_index_vec.clear();
    REC_CovMat_pindex_vec.clear();
    REC_CovMat_C11_vec.clear();
    REC_CovMat_C12_vec.clear();
    REC_CovMat_C13_vec.clear();
    REC_CovMat_C14_vec.clear();
    REC_CovMat_C15_vec.clear();
    REC_CovMat_C22_vec.clear();
    REC_CovMat_C23_vec.clear();
    REC_CovMat_C24_vec.clear();
    REC_CovMat_C25_vec.clear();
    REC_CovMat_C33_vec.clear();
    REC_CovMat_C34_vec.clear();
    REC_CovMat_C35_vec.clear();
    REC_CovMat_C44_vec.clear();
    REC_CovMat_C45_vec.clear();
    REC_CovMat_C55_vec.clear();
    REC_VertDoca_index1_vec.clear();
    REC_VertDoca_index2_vec.clear();
    REC_VertDoca_x_vec.clear();
    REC_VertDoca_y_vec.clear();
    REC_VertDoca_z_vec.clear();
    REC_VertDoca_x1_vec.clear();
    REC_VertDoca_y1_vec.clear();
    REC_VertDoca_z1_vec.clear();
    REC_VertDoca_cx1_vec.clear();
    REC_VertDoca_cy1_vec.clear();
    REC_VertDoca_cz1_vec.clear();
    REC_VertDoca_x2_vec.clear();
    REC_VertDoca_y2_vec.clear();
    REC_VertDoca_z2_vec.clear();
    REC_VertDoca_cx2_vec.clear();
    REC_VertDoca_cy2_vec.clear();
    REC_VertDoca_cz2_vec.clear();
    REC_VertDoca_r_vec.clear();
    REC_Traj_pindex_vec.clear();
    REC_Traj_index_vec.clear();
    REC_Traj_detId_vec.clear();
    REC_Traj_q_vec.clear();
    REC_Traj_x_vec.clear();
    REC_Traj_y_vec.clear();
    REC_Traj_z_vec.clear();
    REC_Traj_cx_vec.clear();
    REC_Traj_cy_vec.clear();
    REC_Traj_cz_vec.clear();
    REC_Traj_pathlength_vec.clear();
  }
  OutputFile->cd();
  clas12->Write();
  OutputFile->Close();

  return 0;
}
