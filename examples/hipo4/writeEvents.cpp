//***********************************************************************
//***********************************************************************
//  HIPO 4.0
//=======================================================================
// Autogenerated code by HIPO 4.0 io library
// Modify the main loop to suite your needs
// Date: 07/17/2018
// Author: G.Gavalian
//***********************************************************************
#include "hipo4/writer.h"
#include <cstdlib>
#include <iostream>

int main(int argc, char** argv) {

  std::string inputFile;
  std::string outputFile;

  if (argc > 2) {
    inputFile  = argv[1];
    outputFile = argv[2];
  } else {
    std::cerr << " *** please provide a file name..." << std::endl;
    exit(1);
  }

  auto reader  = std::make_unique<hipo::reader>(inputFile);
  auto writer  = std::make_unique<hipo::writer>(outputFile);
  auto factory = std::make_unique<hipo::dictionary>();

  reader->readDictionary(*factory);
  writer->getDictionary().addSchema(factory->getSchema("REC::Particle"));

  auto Particle = std::make_unique<hipo::bank>(factory->getSchema("REC::Particle"));

  auto inEvent  = std::make_unique<hipo::event>();
  auto outEvent = std::make_unique<hipo::event>();

  while (reader->next()) {
    reader->read(*inEvent);
    inEvent->getStructure(*Particle);
    outEvent->reset();
    if (Particle->getRows() > 0) {
      outEvent->addStructure(*Particle);
      writer->addEvent(*outEvent);
    }
  }

  // writer->showSummary();

  return 1;
}
